{"ast":null,"code":"var _jsxFileName = \"/Users/abeyahc/Desktop/study-pal/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport \"./styles.css\";\nimport { useQuery, gql } from '@apollo/client';\nimport { useState } from 'react';\nimport React from 'react';\nimport Navbar from \"./Navbar\";\nimport About from \"./pages/About\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GET_STUDY_GROUPS = gql`\n query GetStudyGroups($searchText: String!) {\n  study_group(where: {class: {_ilike: $searchText}}) {\n    id\n    class\n    students_in_groups {\n      student {\n        name\n        major\n      }\n    }\n  }\n}\n`;\nfunction App() {\n  _s();\n  var _data$study_group;\n  const [search, setSearch] = useState('');\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_STUDY_GROUPS, {\n    variables: {\n      searchText: `%${search}%`\n    }\n  });\n  let Component;\n  switch (window.location.pathname) {\n    case \"/\":\n      Component = /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this);\n      break;\n    case \"/about\":\n      Component = /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this);\n      break;\n  }\n  return (\n    /*#__PURE__*/\n    // navbar\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), Component]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        placeholder: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), data === null || data === void 0 ? void 0 : (_data$study_group = data.study_group) === null || _data$study_group === void 0 ? void 0 : _data$study_group.map(studyGroup => {\n        var _studyGroup$students_;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: studyGroup.class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: studyGroup === null || studyGroup === void 0 ? void 0 : (_studyGroup$students_ = studyGroup.students_in_groups) === null || _studyGroup$students_ === void 0 ? void 0 : _studyGroup$students_.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: s.student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" here are all the classes with students \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"zcyFFsrLzGFumMUgFp1zY15eHRI=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useQuery","gql","useState","React","Navbar","About","jsxDEV","_jsxDEV","Fragment","_Fragment","GET_STUDY_GROUPS","App","_s","_data$study_group","search","setSearch","loading","error","data","variables","searchText","Component","window","location","pathname","Home","fileName","_jsxFileName","lineNumber","columnNumber","className","children","value","onChange","e","target","placeholder","study_group","map","studyGroup","_studyGroup$students_","class","students_in_groups","s","student","name","_c","$RefreshReg$"],"sources":["/Users/abeyahc/Desktop/study-pal/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport \"./styles.css\"\n\nimport { useQuery, gql } from '@apollo/client';\nimport { useState } from 'react';\n\nimport React from 'react';\nimport Navbar from \"./Navbar\"\nimport About from \"./pages/About\"\n\n\nconst GET_STUDY_GROUPS = gql`\n query GetStudyGroups($searchText: String!) {\n  study_group(where: {class: {_ilike: $searchText}}) {\n    id\n    class\n    students_in_groups {\n      student {\n        name\n        major\n      }\n    }\n  }\n}\n`;\n\nfunction App() {\n  const [search, setSearch] = useState('')\n\n  const { loading, error, data } = useQuery(\n    GET_STUDY_GROUPS,\n    {\n      variables: {\n        searchText: `%${search}%`\n      }\n    }\n  );\n  let Component\n  switch (window.location.pathname) {\n    case \"/\":\n      Component = <Home />\n      break\n    case \"/about\":\n      Component = <About />\n      break\n  }\n  return (\n    // navbar\n    <div className=\"App\">\n       <>\n        <Navbar />\n        {Component}\n       </>\n\n\n\n      \n      <input\n        value={search}\n        onChange={e => setSearch(e.target.value)} \n        placeholder=\"Search\"\n      />\n        {data?.study_group?.map(studyGroup => (\n          <>\n            <h2>{studyGroup.class}</h2>\n            <ul>\n            {studyGroup?.students_in_groups?.map(\n              s => (<li>{s.student.name}</li>)\n              )}\n            </ul>\n          </>\n        ))}\n        <p> here are all the classes with students </p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/abeyahc/Desktop/study-pal/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useQuery, gql } from '@apollo/client';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_STUDY_GROUPS = gql`\n query GetStudyGroups($searchText: String!) {\n  study_group(where: {class: {_ilike: $searchText}}) {\n    id\n    class\n    students_in_groups {\n      student {\n        name\n        major\n      }\n    }\n  }\n}\n`;\nfunction App() {\n  _s();\n  var _data$study_group, _data$study_group$at, _data$study_group$at$;\n  const [search, setSearch] = useState('');\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_STUDY_GROUPS, {\n    variables: {\n      searchText: `%${search}%`\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data === null || data === void 0 ? void 0 : (_data$study_group = data.study_group) === null || _data$study_group === void 0 ? void 0 : (_data$study_group$at = _data$study_group.at(0)) === null || _data$study_group$at === void 0 ? void 0 : (_data$study_group$at$ = _data$study_group$at.students_in_groups) === null || _data$study_group$at$ === void 0 ? void 0 : _data$study_group$at$.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: s.student.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zcyFFsrLzGFumMUgFp1zY15eHRI=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useQuery","gql","useState","jsxDEV","_jsxDEV","GET_STUDY_GROUPS","App","_s","_data$study_group","_data$study_group$at","_data$study_group$at$","search","setSearch","loading","error","data","variables","searchText","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","study_group","at","students_in_groups","map","s","student","name","_c","$RefreshReg$"],"sources":["/Users/abeyahc/Desktop/study-pal/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport { useQuery, gql } from '@apollo/client';\nimport { useState } from 'react';\n\nconst GET_STUDY_GROUPS = gql`\n query GetStudyGroups($searchText: String!) {\n  study_group(where: {class: {_ilike: $searchText}}) {\n    id\n    class\n    students_in_groups {\n      student {\n        name\n        major\n      }\n    }\n  }\n}\n`;\n\nfunction App() {\n  const [search, setSearch] = useState('')\n\n  const { loading, error, data } = useQuery(\n    GET_STUDY_GROUPS,\n    {\n      variables: {\n        searchText: `%${search}%`\n      }\n    }\n  );\n\n  return (\n    <div className=\"App\">\n      <input\n        value={search}\n        onChange={e => setSearch(e.target.value)}\n      />\n      <ul>\n        {data?.study_group?.at(0)?.students_in_groups?.map(\n          s => (<li>{s.student.name}</li>)\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAElB,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,gBAAgB,GAAGJ,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,oBAAA,EAAAC,qBAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM;IAAEW,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGf,QAAQ,CACvCK,gBAAgB,EAChB;IACEW,SAAS,EAAE;MACTC,UAAU,EAAG,IAAGN,MAAO;IACzB;EACF,CAAC,CACF;EAED,oBACEP,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MACEgB,KAAK,EAAET,MAAO;MACdU,QAAQ,EAAEC,CAAC,IAAIV,SAAS,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC,eACFvB,OAAA;MAAAe,QAAA,EACGJ,IAAI,aAAJA,IAAI,wBAAAP,iBAAA,GAAJO,IAAI,CAAEa,WAAW,cAAApB,iBAAA,wBAAAC,oBAAA,GAAjBD,iBAAA,CAAmBqB,EAAE,CAAC,CAAC,CAAC,cAAApB,oBAAA,wBAAAC,qBAAA,GAAxBD,oBAAA,CAA0BqB,kBAAkB,cAAApB,qBAAA,uBAA5CA,qBAAA,CAA8CqB,GAAG,CAChDC,CAAC,iBAAK5B,OAAA;QAAAe,QAAA,EAAKa,CAAC,CAACC,OAAO,CAACC;MAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IACjC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV;AAACpB,EAAA,CAzBQD,GAAG;EAAA,QAGuBN,QAAQ;AAAA;AAAAmC,EAAA,GAHlC7B,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}